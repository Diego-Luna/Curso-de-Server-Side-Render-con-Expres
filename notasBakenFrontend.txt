/////////////////////////////////// iniciando ///////////////////////////////////
Creamos nuestros paths utils/auth/strategies dentro de server y copiamos ell 
archivo basic.js

Instalamos las dependencias para que funcione passport

passport-http

axios

passport

@hapi/boom

- npm i passport passport-http @hapi/boom axios
Instalamos paquetes para el manejo de las cookies y sesiones

express-session

cookie-parser

- npm i cookie-parser express-session
Instalamos dependencia para poder trabajar con async/await en nuestro proyecto

@babel/polyfill

- npm i @babel/polyfill

/////////////////////////////////// iniciando ///////////////////////////////////

/////////////////////////////////// pruevas con jest ///////////////////////////////////

las pruevas son para garantisar la calidad del codigo:

- npm install jest enzyme enzyme-adapter-react-16 -D

-> jest, para pruevas unitarias
-> enzyme, para elemtos para poder montar

package.json:
"jest": {
    "setupFilesAfterEnv": [
      "<rootDir>/src/frontend/__test__/setupTest.js"
    ]
  }

/////////////////////////////////// pruevas con jest ///////////////////////////////////

/////////////////////////////////// Implementando snapshots ///////////////////////////////////

Instalamos el siguiente paquete.

react-test-renderer

- npm i react-test-renderer --save-dev
Getting Started · Jest

Los snapshots nos van a permitir que nuestra ui no cambie bruscamente. Que no se mande a producción con doble navbar, doble logo etc. Siempre avisando cuando hay algun cambio y fallando la prueba.

Si necesitomos actualizar nuestro snapshot inicial debemos correr el comando.

- npm install jest --global 
y actualizamos los snapshots con:

- jest --updateSnapshot

/////////////////////////////////// Implementando snapshots ///////////////////////////////////
